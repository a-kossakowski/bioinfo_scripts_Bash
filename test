find_motifs.sh
#!/bin/bash
# find_motifs.sh: identifies specified motifs in sequences

if [ $# -ne 2 ]; then
    echo "Usage: $0 <sequence_file> <motif>"
    exit 1
fi

sequence_file=$1
motif=$2

# search for motifs
echo "Searching for motifs: $motif"
awk -v motif="$motif" '
    /^>/ {
        if (seq && found_motif) {
            print seq_id ": " seq
        }
        seq_id = substr($0, 2)
        seq=""
        found_motif=0
    }
    !/^>/ {
        seq=seq""$0
        if ($0 ~ motif) {
            split($0, parts, motif);
            seq = parts[1] "__" motif "__" parts[2]
            found_motif=1
        }
    }
    END {
        if (seq && found_motif) {
            print seq_id ": " seq
        }
    }
' $sequence_file

seq_manipulate.sh
#!/bin/bash
# prot_manipulate.sh: performs basic manipulations on protein sequences

if [ $# -lt 2 ]; then
    echo "Usage: $0 <sequence_file> <action>"
    echo "Actions: to_low"
    exit 1
fi

sequence_file=$1
action=$2

case $action in
    to_low)
        # Convert sequences to lowercase
        awk '/^>/ {if (seq) print tolower(seq); print; seq=""} !/^>/ {seq=seq""$0} END {print tolower(seq)}' $sequence_file
        ;;
    *)
        echo "Invalid action: $action"
        exit 1
        ;;
esac

seq_stats.sh
#!/bin/bash
# seq_stats.sh: calculates statistics for protein sequences

if [ $# -ne 1 ]; then
    echo "Usage: $0 <sequence_file>"
    exit 1
fi

sequence_file=$1

# calculate sequence length and average length
echo "Sequence Statistics:"
awk '/^>/ {
        if (seq) {
            print seq_id " - Length: " length(seq)
            total_length += length(seq)
            sequence_count++
        }
        seq_id = substr($0, 2)
        seq=""
    }
    !/^>/ {
        seq=seq""$0
    }
    END {
        print seq_id " - Length: " length(seq)
        total_length += length(seq)
        sequence_count++
        printf "Average Length: %d\n", total_length / sequence_count
    }' $sequence_file

# count number of sequences
seq_count=$(grep -c "^>" $sequence_file)
echo "Sequence count: $seq_count"



setup.sh
#!/bin/bash
# setup.sh: checks for required software and prepares environment

# check for awk, sed, grep
for tool in awk sed grep; do
    if ! command -v $tool &> /dev/null; then
        echo "$tool could not be found, please install it."
        exit 1
    fi
done

echo "Required software is installed. Environment is ready."

test_scripts.sh
#!/bin/bash

# examples for testing purposes
echo "Test for seq_stats.sh:"
bash ./seq_stats.sh protein_sequences.fasta
echo "----------------------------------------"
echo "Test for find_motifs.sh:"
bash ./find_motifs.sh protein_sequences.fasta GLKNVF
echo "----------------------------------------"
echo "Test for eq_manipulate.sh:"
bash ./seq_manipulate.sh protein_sequences.fasta to_low

